/*
 * File: app/view/RecordDisplay.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.RecordDisplay', {
    extend: 'Ext.panel.Panel',

    frame: true,
    height: 456,
    layout: {
        align: 'stretch',
        type: 'vbox'
    },
    title: 'My Records',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    height: 242,
                    id: 'RecordGrid',
                    store: 'RecordStore',
                    listeners: {
                        select: {
                            fn: me.onRowSelect,
                            scope: me
                        }
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 543,
                            dataIndex: 'title',
                            text: 'Title'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    flex: 1,
                    margins: '5 0 0 0',
                    height: 366,
                    itemId: 'RecordDetails',
                    tpl: [
                        '<h1>{title}</h1>',
                        '<p>',
                        '    {description}',
                        '</p>    '
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onRowSelect: function(rowmodel, record, index, eOpts) {

        // grab a reference to the detailPanel via itemId
        // the # in front of the id indicates that we would like to grab a reference by
        var details = this.child('#RecordDetails');

        // update the detailPanel with data
        // this will trigger the tpl to become updates
        details.update(record.data);

    }

});