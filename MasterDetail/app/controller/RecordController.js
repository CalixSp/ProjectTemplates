/*
 * File: app/controller/RecordController.js
 *
 * This file was generated by Sencha Architect version 2.3.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.RecordController', {
    extend: 'Ext.app.Controller',

    stores: [
        'Records'
    ],

    refs: [
        {
            ref: 'detailPanel',
            selector: '#DetailPanel'
        },
        {
            ref: 'toolbar',
            selector: '#DetailPanel toolbar'
        }
    ],

    view: function(target, record) {

        var details = this.getDetailPanel(),	// Detail panel via controller ref
        toolbar = this.getToolbar();		// Detail panel toolbar via controller ref

        // Update the detail panel with the selected row's data
        details.update(record.data);

        // Show toolbar
        toolbar.show();
    },

    add: function(target) {

        var window = Ext.create('MyApp.view.RecordForm'),	// Create new form window
        form = window.down('form').getForm(),			// Get form
        model = Ext.create('MyApp.model.Record');		// Create new Record model

        // Associate model with form
        form.loadRecord(model);

        // Show window
        window.show();

    },

    edit: function(target) {
        var data = target.up('panel').data,					// Assosiated data
        store = this.getRecordsStore(),					// Record store
        record = store.getById(data.id),				// Current record
        window = Ext.create('MyApp.view.RecordForm'),	// Create new form window
        form = window.down('form').getForm();			// Get form

        // Load record model into form
        form.loadRecord(record);

        // Show window
        window.show();

    },

    save: function(target) {

        var form = target.up('form').getForm(),		// Form
        window = target.up('window'),			// Form window
        detailPanel = this.getDetailPanel(),	// Detail panel
        toolbar = this.getToolbar(),			// Detail panel toolbar
        record = form.getRecord(),				// Record associated with form
        isNew = !record.get('id'),				// Is new if no id exists
        store = this.getRecordsStore();			// Record store


        // Update associated record with form values
        var errors = form.updateRecord();

        // Valid
        if (form.isValid()) {

            // Add to store if new record
            if (isNew) {

                // Assign the record ID
                // Normally, this would be a generated ID
                var id = store.getTotalCount() + 1;
                record.set("id", id);

                // Add to store
                store.add(record);

            }

            // Commit changes 
            store.commitChanges();

            // Update detail panel
            detailPanel.update(record.getData());

            // Close window
            window.destroy();

        }


        // Invalid
        else {

            // Show errors on form
            form.markInvalid(errors);

        }
    },

    cancelEdit: function(target) {

        // Get the window and close it
        var window = target.up("window");
        window.destroy();

    },

    delete: function(target) {

        var me = this;

        // Confirm this delete
        Ext.MessageBox.confirm('Confirm', 'Are you sure you want to delete this record?', function() {

            var data = target.up('panel').data,			// Get assosiated data	
            store = me.getRecordsStore(),			// Get record store
            record = store.getById(data.id),		// Get current record
            detailPanel = me.getDetailPanel(),		// Get detail panel	
            toolbar = me.getToolbar();				// Get toolbar

            // Delete from store
            store.remove(record);

            // Clear panel content
            detailPanel.update(null);

            // Hide toolbar
            toolbar.hide();


        });
    },

    init: function(application) {
        this.control({
            "#RecordGrid": {
                select: this.view
            },
            "#AddButton": {
                click: this.add
            },
            "#DetailPanel button[text=Edit]": {
                click: this.edit
            },
            "#RecordForm button[text=Save]": {
                click: this.save
            },
            "#RecordForm button[text=Cancel]": {
                click: this.cancelEdit
            },
            "#DetailPanel button[text=Delete]": {
                click: this.delete
            }
        });
    }

});
