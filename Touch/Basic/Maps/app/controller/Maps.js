/*
 * File: app/controller/Maps.js
 *
 * This file was generated by Sencha Architect version 2.3.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Maps', {
    extend: 'Ext.app.Controller',

    config: {
        models: [
            'Location'
        ],
        stores: [
            'Locations'
        ],

        refs: {
            mapView: {
                selector: 'mainview #map',
                xtype: 'Ext.Map'
            },
            mainView: {
                selector: 'mainview',
                xtype: 'Ext.navigation.View'
            },
            mapPanel: {
                selector: 'mainview #mapPanel',
                xtype: 'Ext.Panel'
            },
            dropPin: {
                selector: 'mainview #dropPin',
                xtype: 'Ext.Button'
            },
            listPins: {
                selector: 'mainview #listPins',
                xtype: 'Ext.Button'
            }
        },

        control: {
            "mainview #dropPin": {
                tap: 'onDropPinTap'
            },
            "mainview #listPanel list": {
                disclose: 'onLocationTap'
            },
            "mainview #listPins": {
                tap: 'onListPinsTap'
            },
            "mainview": {
                back: 'onBack'
            }
        }
    },

    onDropPinTap: function(button, e, eOpts) {
        var mainView = this.getMainView();
        
        var inMapView = true;
        
        if (inMapView) {
        
        	var map = this.getMapView().getMap();
        
        	var position = map.getCenter();
        
        	var marker = new google.maps.Marker({
        	    position: position,
        	    map: map
        	});
        
        	var store = Ext.getStore('Locations');
        	store.add({
        	    latitude: position.lat(),
        	    longitude: position.lng()
        	});
        
        } else {
        
            debugger;
        
        }
    },

    onLocationTap: function(list, record, target, index, e, eOpts) {
        var latitude = record.get('latitude');
        var longitude = record.get('longitude');
        
        var map = this.getMapView();
        var location = new google.maps.LatLng(latitude, longitude);
        map.setMapOptions({
            center: location
        });
        
        this.getDropPin().show();
        this.getListPins().show();
        
        this.getMainView().pop();
    },

    onListPinsTap: function(button, e, eOpts) {
        this.getMainView().push({
            xtype: 'listpanel',
            title: 'Pin list'
        });
        
        this.getDropPin().hide();
        this.getListPins().hide();
    },

    onBack: function(navigationview, eOpts) {
        this.getDropPin().show();
        this.getListPins().show();
    }

});